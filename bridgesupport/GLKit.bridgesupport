<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/ModelIO.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<struct name='GLKVertexAttributeParameters' type64='{_GLKVertexAttributeParameters=&quot;type&quot;I&quot;size&quot;i&quot;normalized&quot;C}'/>
<cftype gettypeid_func='GLKMatrixStackGetTypeID' name='GLKMatrixStackRef' tollfree='__NSCFType' type64='^{_GLKMatrixStack=}'/>
<opaque name='GLKEffectPropertyPrvPtr' type64='^{GLKEffectPropertyPrv=}'/>
<constant name='GLKMatrix3Identity' type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<constant name='GLKMatrix4Identity' type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<constant name='GLKQuaternionIdentity' type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<constant name='GLKTextureLoaderApplyPremultiplication' type64='@'/>
<constant name='GLKTextureLoaderErrorDomain' type64='@'/>
<constant name='GLKTextureLoaderErrorKey' type64='@'/>
<constant name='GLKTextureLoaderGLErrorKey' type64='@'/>
<constant name='GLKTextureLoaderGenerateMipmaps' type64='@'/>
<constant name='GLKTextureLoaderOriginBottomLeft' type64='@'/>
<constant name='GLKTextureLoaderSRGB' type64='@'/>
<constant name='kGLKModelErrorDomain' type64='@'/>
<constant name='kGLKModelErrorKey' type64='@'/>
<enum name='GLKFogModeExp' value64='0'/>
<enum name='GLKFogModeExp2' value64='1'/>
<enum name='GLKFogModeLinear' value64='2'/>
<enum name='GLKLightingTypePerPixel' value64='1'/>
<enum name='GLKLightingTypePerVertex' value64='0'/>
<enum name='GLKTextureEnvModeDecal' value64='2'/>
<enum name='GLKTextureEnvModeModulate' value64='1'/>
<enum name='GLKTextureEnvModeReplace' value64='0'/>
<enum name='GLKTextureInfoAlphaStateNonPremultiplied' value64='1'/>
<enum name='GLKTextureInfoAlphaStateNone' value64='0'/>
<enum name='GLKTextureInfoAlphaStatePremultiplied' value64='2'/>
<enum name='GLKTextureInfoOriginBottomLeft' value64='2'/>
<enum name='GLKTextureInfoOriginTopLeft' value64='1'/>
<enum name='GLKTextureInfoOriginUnknown' value64='0'/>
<enum name='GLKTextureLoaderErrorAlphaPremultiplicationFailure' value64='16'/>
<enum name='GLKTextureLoaderErrorCompressedTextureUpload' value64='7'/>
<enum name='GLKTextureLoaderErrorCubeMapInvalidNumFiles' value64='6'/>
<enum name='GLKTextureLoaderErrorDataPreprocessingFailure' value64='12'/>
<enum name='GLKTextureLoaderErrorFileOrURLNotFound' value64='0'/>
<enum name='GLKTextureLoaderErrorIncompatibleFormatSRGB' value64='18'/>
<enum name='GLKTextureLoaderErrorInvalidCGImage' value64='2'/>
<enum name='GLKTextureLoaderErrorInvalidEAGLContext' value64='17'/>
<enum name='GLKTextureLoaderErrorInvalidNSData' value64='1'/>
<enum name='GLKTextureLoaderErrorMipmapUnsupported' value64='13'/>
<enum name='GLKTextureLoaderErrorPVRAtlasUnsupported' value64='5'/>
<enum name='GLKTextureLoaderErrorReorientationFailure' value64='15'/>
<enum name='GLKTextureLoaderErrorUncompressedTextureUpload' value64='8'/>
<enum name='GLKTextureLoaderErrorUnknownFileType' value64='4'/>
<enum name='GLKTextureLoaderErrorUnknownPathType' value64='3'/>
<enum name='GLKTextureLoaderErrorUnsupportedBitDepth' value64='10'/>
<enum name='GLKTextureLoaderErrorUnsupportedCubeMapDimensions' value64='9'/>
<enum name='GLKTextureLoaderErrorUnsupportedOrientation' value64='14'/>
<enum name='GLKTextureLoaderErrorUnsupportedPVRFormat' value64='11'/>
<enum name='GLKTextureLoaderErrorUnsupportedTextureTarget' value64='19'/>
<enum name='GLKTextureTarget2D' value64='3553'/>
<enum name='GLKTextureTargetCt' value64='2'/>
<enum name='GLKTextureTargetCubeMap' value64='34067'/>
<enum name='GLKVertexAttribColor' value64='2'/>
<enum name='GLKVertexAttribNormal' value64='1'/>
<enum name='GLKVertexAttribPosition' value64='0'/>
<enum name='GLKVertexAttribTexCoord0' value64='3'/>
<enum name='GLKVertexAttribTexCoord1' value64='4'/>
<enum name='GLK_SSE3_INTRINSICS' value64='1'/>
<function inline='true' name='GLKMathDegreesToRadians'>
<arg type64='f'/>
<retval type64='f'/>
</function>
<function name='GLKMathProject'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^i'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKMathRadiansToDegrees'>
<arg type64='f'/>
<retval type64='f'/>
</function>
<function name='GLKMathUnproject'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^i'/>
<arg type64='^B'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKMatrix3Add'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3GetColumn'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='i'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKMatrix3GetMatrix2'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<retval type64='(_GLKMatrix2={?=ffff}[2[2f]][4f])'/>
</function>
<function inline='true' name='GLKMatrix3GetRow'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='i'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function name='GLKMatrix3Invert'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='^B'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function name='GLKMatrix3InvertAndTranspose'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='^B'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3Make'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeAndTranspose'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeRotation'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeScale'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeWithArray'>
<arg type64='^f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeWithArrayAndTranspose'>
<arg type64='^f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeWithColumns'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeWithQuaternion'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeWithRows'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeXRotation'>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeYRotation'>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MakeZRotation'>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3Multiply'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3MultiplyVector3'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKMatrix3MultiplyVector3Array'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='^(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function inline='true' name='GLKMatrix3Rotate'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3RotateWithVector3'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='f'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3RotateWithVector4'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='f'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3RotateX'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3RotateY'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3RotateZ'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3Scale'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3ScaleWithVector3'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3ScaleWithVector4'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3SetColumn'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='i'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3SetRow'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='i'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3Subtract'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix3Transpose'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix4Add'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4GetColumn'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='i'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKMatrix4GetMatrix2'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='(_GLKMatrix2={?=ffff}[2[2f]][4f])'/>
</function>
<function inline='true' name='GLKMatrix4GetMatrix3'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function inline='true' name='GLKMatrix4GetRow'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='i'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function name='GLKMatrix4Invert'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^B'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function name='GLKMatrix4InvertAndTranspose'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^B'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4Make'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeAndTranspose'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeFrustum'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeLookAt'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeOrtho'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakePerspective'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeRotation'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeScale'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeTranslation'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeWithArray'>
<arg type64='^f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeWithArrayAndTranspose'>
<arg type64='^f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeWithColumns'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeWithQuaternion'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeWithRows'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeXRotation'>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeYRotation'>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MakeZRotation'>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4Multiply'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyAndProjectVector3'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyAndProjectVector3Array'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyVector3'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyVector3Array'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyVector3ArrayWithTranslation'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyVector3WithTranslation'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyVector4'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKMatrix4MultiplyVector4Array'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='^(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function inline='true' name='GLKMatrix4Rotate'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4RotateWithVector3'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4RotateWithVector4'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4RotateX'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4RotateY'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4RotateZ'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4Scale'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4ScaleWithVector3'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4ScaleWithVector4'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4SetColumn'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='i'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4SetRow'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='i'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4Subtract'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4Translate'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4TranslateWithVector3'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4TranslateWithVector4'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='GLKMatrix4Transpose'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function name='GLKMatrixStackCreate'>
<arg type64='^{__CFAllocator=}'/>
<retval already_retained='true' type64='^{_GLKMatrixStack=}'/>
</function>
<function name='GLKMatrixStackGetMatrix2'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='(_GLKMatrix2={?=ffff}[2[2f]][4f])'/>
</function>
<function name='GLKMatrixStackGetMatrix3'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function name='GLKMatrixStackGetMatrix3Inverse'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function name='GLKMatrixStackGetMatrix3InverseTranspose'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
</function>
<function name='GLKMatrixStackGetMatrix4'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function name='GLKMatrixStackGetMatrix4Inverse'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function name='GLKMatrixStackGetMatrix4InverseTranspose'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function name='GLKMatrixStackGetTypeID'>
<retval type64='Q'/>
</function>
<function name='GLKMatrixStackLoadMatrix4'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackMultiplyMatrix4'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackMultiplyMatrixStack'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackPop'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackPush'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackRotate'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackRotateWithVector3'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackRotateWithVector4'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackRotateX'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackRotateY'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackRotateZ'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackScale'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackScaleWithVector3'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackScaleWithVector4'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackSize'>
<arg type64='^{_GLKMatrixStack=}'/>
<retval type64='i'/>
</function>
<function name='GLKMatrixStackTranslate'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackTranslateWithVector3'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='v'/>
</function>
<function name='GLKMatrixStackTranslateWithVector4'>
<arg type64='^{_GLKMatrixStack=}'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='v'/>
</function>
<function inline='true' name='GLKQuaternionAdd'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function name='GLKQuaternionAngle'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='f'/>
</function>
<function name='GLKQuaternionAxis'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKQuaternionConjugate'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionInvert'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionLength'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKQuaternionMake'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionMakeWithAngleAndAxis'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionMakeWithAngleAndVector3Axis'>
<arg type64='f'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionMakeWithArray'>
<arg type64='^f'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function name='GLKQuaternionMakeWithMatrix3'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function name='GLKQuaternionMakeWithMatrix4'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionMakeWithVector3'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionMultiply'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionNormalize'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionRotateVector3'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function name='GLKQuaternionRotateVector3Array'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='^(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function inline='true' name='GLKQuaternionRotateVector4'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function name='GLKQuaternionRotateVector4Array'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='^(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function name='GLKQuaternionSlerp'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKQuaternionSubtract'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector2Add'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2AddScalar'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2AllEqualToScalar'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector2AllEqualToVector2'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector2AllGreaterThanOrEqualToScalar'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector2AllGreaterThanOrEqualToVector2'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector2AllGreaterThanScalar'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector2AllGreaterThanVector2'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector2Distance'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector2Divide'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2DivideScalar'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2DotProduct'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector2Length'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector2Lerp'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Make'>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2MakeWithArray'>
<arg type64='^f'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Maximum'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Minimum'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Multiply'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2MultiplyScalar'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Negate'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Normalize'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Project'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2Subtract'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector2SubtractScalar'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
</function>
<function inline='true' name='GLKVector3Add'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3AddScalar'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3AllEqualToScalar'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector3AllEqualToVector3'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector3AllGreaterThanOrEqualToScalar'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector3AllGreaterThanOrEqualToVector3'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector3AllGreaterThanScalar'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector3AllGreaterThanVector3'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector3CrossProduct'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Distance'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector3Divide'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3DivideScalar'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3DotProduct'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector3Length'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector3Lerp'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Make'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3MakeWithArray'>
<arg type64='^f'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Maximum'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Minimum'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Multiply'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3MultiplyScalar'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Negate'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Normalize'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Project'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3Subtract'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector3SubtractScalar'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function inline='true' name='GLKVector4Add'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4AddScalar'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4AllEqualToScalar'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector4AllEqualToVector4'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector4AllGreaterThanOrEqualToScalar'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector4AllGreaterThanOrEqualToVector4'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector4AllGreaterThanScalar'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector4AllGreaterThanVector4'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='B'/>
</function>
<function inline='true' name='GLKVector4CrossProduct'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Distance'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector4Divide'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4DivideScalar'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4DotProduct'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector4Length'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='f'/>
</function>
<function inline='true' name='GLKVector4Lerp'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Make'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4MakeWithArray'>
<arg type64='^f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4MakeWithVector3'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Maximum'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Minimum'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Multiply'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4MultiplyScalar'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Negate'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Normalize'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Project'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4Subtract'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function inline='true' name='GLKVector4SubtractScalar'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<arg type64='f'/>
<retval type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<function name='GLKVertexAttributeParametersFromModelIO'>
<arg type64='Q'/>
<retval type64='{_GLKVertexAttributeParameters=IiC}'/>
</function>
<function name='NSStringFromGLKMatrix2'>
<arg type64='(_GLKMatrix2={?=ffff}[2[2f]][4f])'/>
<retval type64='@'/>
</function>
<function name='NSStringFromGLKMatrix3'>
<arg type64='(_GLKMatrix3={?=fffffffff}[9f])'/>
<retval type64='@'/>
</function>
<function name='NSStringFromGLKMatrix4'>
<arg type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval type64='@'/>
</function>
<function name='NSStringFromGLKQuaternion'>
<arg type64='(_GLKQuaternion={?=(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])f}{?=ffff}[4f])'/>
<retval type64='@'/>
</function>
<function name='NSStringFromGLKVector2'>
<arg type64='(_GLKVector2={?=ff}{?=ff}[2f])'/>
<retval type64='@'/>
</function>
<function name='NSStringFromGLKVector3'>
<arg type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval type64='@'/>
</function>
<function name='NSStringFromGLKVector4'>
<arg type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval type64='@'/>
</function>
<class name='GLKTextureInfo'>
<method selector='containsMipmaps'>
<retval type64='B'/>
</method>
</class>
<class name='GLKTextureLoader'>
<method selector='cubeMapWithContentsOfFile:options:queue:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='cubeMapWithContentsOfFiles:options:queue:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='cubeMapWithContentsOfURL:options:queue:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='textureWithCGImage:options:queue:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='textureWithContentsOfData:options:queue:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='textureWithContentsOfFile:options:queue:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='textureWithContentsOfURL:options:queue:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='textureWithName:scaleFactor:bundle:options:queue:completionHandler:'>
<arg function_pointer='true' index='5' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
</signatures>
